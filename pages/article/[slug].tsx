import React from "react";
import { AxiosResponse } from "axios";
import { IArticle, ICollectionResponse } from "@/types";
import { fetchArticleBySlug } from "@/http";
import qs from "qs";
import { GetServerSideProps } from "next";
import Head from "next/head";
import { fromatDate, serializeMarkdown } from "@/utils";
import Image from "next/image";
import { MDXRemote, MDXRemoteSerializeResult } from "next-mdx-remote";
interface IPropType {
  article: IArticle;
  notFound?: boolean;
}

const slug = ({ article, notFound = false }: IPropType) => {
  return (
    <>
      <Head>
        <title>{article.attributes.Title} </title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="flex ">
        <div className="w-2/3 single-article">
          <h1 className="my-10 text-3xl font-bold ">
            {article.attributes.Title}{" "}
          </h1>
          <div className="flex items-center my-4">
            <div className="flex items-center justify-center mr-2 overflow-hidden rounded-lg">
              <img
                src={`http://localhost:1337${article.attributes.author.data.attributes.avatar.data.attributes.formats.thumbnail.url}`}
                alt="test of author"
                width={30}
                height={30}
              />
            </div>

            <span className="text-sm font-bold ">
              {article.attributes.author.data.attributes.firstname}{" "}
              {article.attributes.author.data.attributes.lastname} on &nbsp;
            </span>
            <span>{fromatDate(article.attributes.createdAt)}</span>
          </div>
          <div className="text-lg leading-8 text-gray-600">
            <img
              src={`http://localhost:1337${article.attributes.image.data.attributes.url}`}
              className="w-full"
            />
            <div className="mt-10 text-gray-900 ">
              <p className="mb-4 text-xl font-bold">Introduction</p>
              <MDXRemote
                {...(article.attributes.body as MDXRemoteSerializeResult)}
              />
            </div>
          </div>
        </div>
      </div>
    </>
  );
};

export const getServerSideProps: GetServerSideProps = async ({ query }) => {
  const queryString = qs.stringify({
    populate: ["image", "author.avatar"],
    filters: {
      Slug: {
        $eq: query.slug,
      },
    },
  });
  const { data: articles }: AxiosResponse<ICollectionResponse<IArticle[]>> =
    await fetchArticleBySlug(queryString);
  if (articles.data.length === 0) {
    return {
      notFound: true,
    };
  }
  return {
    props: {
      article: await serializeMarkdown(articles.data[0]),
    },
  };
};

export default slug;
