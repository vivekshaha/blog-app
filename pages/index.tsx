import Head from "next/head";
import { ICollectionResponse } from "@/types";

import { GetServerSideProps } from "next";
import { fetchArtilces, fetchCategories } from "@/http";
import { ICategory, IArticle } from "@/types";
import { AxiosResponse } from "axios";
import Tabs from "@/components/Tabs";
import ArticlesList from "@/components/ArticlesList";

interface IPropTypes {
  categories: {
    items: ICategory[];
  };
  articles: {
    items: IArticle[];
  };
}

export default function Home({ categories, articles }: IPropTypes) {
  console.log(articles);
  return (
    <div>
      <Head>
        <title>Blog Page</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Tabs categories={categories.items} />
      <ArticlesList articles={articles.items} />
    </div>
  );
}

export const getServerSideProps: GetServerSideProps = async () => {
  const options = {
    populate: ["author.avatar"],
    sort: ["id:desc"],
  };

  //fetching artilces
  const qs = require("qs");
  const queryString = qs.stringify(options);
  console.log(queryString);
  const { data: articles }: AxiosResponse<ICollectionResponse<IArticle[]>> =
    await fetchArtilces(queryString);
  console.log(JSON.stringify(articles));

  //featching categoreis
  const { data: categories }: AxiosResponse<ICollectionResponse<ICategory[]>> =
    await fetchCategories();
  return {
    props: {
      categories: {
        items: categories.data,
      },
      articles: {
        items: articles.data,
        pagination: articles.meta.pagination,
      },
    },
  };
};
